// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

// FitRound
vec FitRound(mat x0, vec y, vec tV, double lam1, double lam2, vec beta, double Intercept, vec w, vec IndFor0, vec IndTFor0);
RcppExport SEXP _TimePointsPenalized_FitRound(SEXP x0SEXP, SEXP ySEXP, SEXP tVSEXP, SEXP lam1SEXP, SEXP lam2SEXP, SEXP betaSEXP, SEXP InterceptSEXP, SEXP wSEXP, SEXP IndFor0SEXP, SEXP IndTFor0SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< mat >::type x0(x0SEXP);
    Rcpp::traits::input_parameter< vec >::type y(ySEXP);
    Rcpp::traits::input_parameter< vec >::type tV(tVSEXP);
    Rcpp::traits::input_parameter< double >::type lam1(lam1SEXP);
    Rcpp::traits::input_parameter< double >::type lam2(lam2SEXP);
    Rcpp::traits::input_parameter< vec >::type beta(betaSEXP);
    Rcpp::traits::input_parameter< double >::type Intercept(InterceptSEXP);
    Rcpp::traits::input_parameter< vec >::type w(wSEXP);
    Rcpp::traits::input_parameter< vec >::type IndFor0(IndFor0SEXP);
    Rcpp::traits::input_parameter< vec >::type IndTFor0(IndTFor0SEXP);
    rcpp_result_gen = Rcpp::wrap(FitRound(x0, y, tV, lam1, lam2, beta, Intercept, w, IndFor0, IndTFor0));
    return rcpp_result_gen;
END_RCPP
}
// rcpp_hello_world
List rcpp_hello_world();
RcppExport SEXP _TimePointsPenalized_rcpp_hello_world() {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    rcpp_result_gen = Rcpp::wrap(rcpp_hello_world());
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_TimePointsPenalized_FitRound", (DL_FUNC) &_TimePointsPenalized_FitRound, 10},
    {"_TimePointsPenalized_rcpp_hello_world", (DL_FUNC) &_TimePointsPenalized_rcpp_hello_world, 0},
    {NULL, NULL, 0}
};

RcppExport void R_init_TimePointsPenalized(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
